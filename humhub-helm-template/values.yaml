# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: mriedmann/humhub
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.12.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

adminUsername: admin
adminEmail: admin@example.com
adminPassword: ""
humhubInstanceName: humhub

# Database
externalDatabase:
  host: localhost
  port: 3306
  user: humhub
  name: humhub
  password: ""

#system stuff
humhubEmail: humhub@example.com
humhubLanguage: en-US
humhubDebugMode: false
anonymosRegistration: false
guestAcess: false
needAproval: true

# cacheconfig
cache:
  cacheClass: ""
  cacheExpireTime: 3600

# Mailer Config
mailer: 
  systemEmailAdress: noreply@example.com
  systemEmailName: HumHub
  transportType: php
  hostname: localhost
  port: 25
  username: ""
  password: ""
  encryption: false
  allowSelfSignedCerts: false

# Redis Config
redis:
  enabled: false
  hostname: ""
  port: 6379
  password: ""

# LDAP
ldap:
  enabled: false
  hostname: localhost
  port: 389
  encryption: false
  username: humhub
  password: ""
  baseDn: dc=example,dc=com
  loginFilter: ""
  userFilter: ""
  usernameAttribute: "cn"
  emailAttribute: "mail"
  idAttribute: ""
  refreshUsers: ""
  cacert: ""
  skipVerify: ""

php:
  postMaxSize: 16M
  uploadMaxSize: 10M
  maxExecutionTime: 60
  memoryLimit: 1G
  timezone: UTC


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
persistence:
  enabled: true
  config:
    storageClass: ""
    size: "20Mi"
    accessMode:
      - ReadWriteOnce
    existingClaim: ""
  uploads:
    storageClass: ""
    size: "8Gi"
    accessMode:
      - ReadWriteOnce
    existingClaim: ""
  modules:
    storageClass: ""
    size: "5Gi"
    accessMode:
      - ReadWriteOnce
    existingClaim: ""
  selector: {}
  annotations: {}

nodeSelector: {}

tolerations: []

affinity: {}
