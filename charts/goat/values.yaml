# Default values for common.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
###########################################################
## place values here the will be passed to the container###
###########################################################

backend:
  image:
    registry: docker.io
    repository: josaur/goat:backend
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  env:
    BACKEND_CORS_ORIGINS=["http://localhost"]
    API_SECRET_KEY=12345678
    API_PORT=5000
    AWS_ACCESS_KEY_ID=
    AWS_SECRET_ACCESS_KEY=
    AWS_BUCKET_NAME=
    FIRST_ORGANIZATION=Plan4Better
    FIRST_SUPERUSER_NAME=FirstUserName
    FIRST_SUPERUSER_SURNAME=FirstUserSurname
    FIRST_SUPERUSER_PASSWORD=12345678
    FIRST_SUPERUSER_EMAIL=firstuser@plan4better.de
    FIRST_SUPERUSER_STORAGE=500000 
    FIRST_SUPERUSER_ACTIVE_STUDY_AREA_ID=91620000
    SMTP_TLS=True
    SMTP_PORT=587
    SMTP_HOST=
    SMTP_USER=
    SMTP_PASSWORD=
    EMAILS_FROM_EMAIL=test-reply@plan4better.de
    SENTRY_DSN=
    INSTALL_DEV=True
    INSTALL_JUPYTER=True
    DISABLE_NUMBA_STARTUP_CALL=True
    R5_HOST=172.17.0.1
    R5_AUTHORIZATION=YWRtaW46YWRtaW4 
    R5_JVM_HEAP_GB=4 
    USE_PYGEOS=0

frontend:
  image:
    registry: docker.io
    repository: josaur/goat:frontend
    tag: ""
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  env:
    VUE_APP_I18N_LOCALE=en
    VUE_APP_I18N_FALLBACK_LOCALE=en
    VUE_APP_SEARCH_KEY=ca068d7840bca4
    VUE_APP_SEARCH_URL=https://api.locationiq.com/v1
    API_BASEURL=http://goat_api:5000/
    FONTAWESOME_NPM_AUTH_TOKEN=

postgresql:
  enabled: true
  auth:
    username: goat
    password: ""
    database: goat
  ## if enabled
  primary:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""

redis:
  enabled: true 
  port: 6379
  auth:
    password: ""
    existingSecret: ""
  architecture: standalone 
  master.persistence.enabled: false

rabbitmq:
  enabled: true
  auth:
    username: goat
    password:
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""

mongodb:
  enabled: true
  auth:
    username: goat
    password:
    database: goat
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}

tolerations: []

affinity: {}
